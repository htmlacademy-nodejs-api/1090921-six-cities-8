openapi: 3.0.0
info:
  title: API сервер для проекта «Шесть городов»
  version: 1.0.0
  description: |-
    * Список ресурсов и маршрутов сервера «Шесть городов».
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
tags:
  - name: offers
    description: Действия с объявлениями.
  - name: comments
    description: Действия с комментариями.
  - name: users
    description: Действия с пользователем.

paths:
  /users/register:
    post:
      tags:
        - users
      summary: Создание нового пользователя
      description: Регистрация нового пользователя в системе
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createUser'
      responses:
        '201':
          description: Пользователь успешно создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
        '400':
          description: Некорректные данные для создания пользователя
        '409':
          description: Пользователь с таким email уже существует.

  /users/login:
    post:
      tags:
        - users
      summary: Авторизация пользователя
      description: Авторизует пользователя на основе логина и пароля
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/login'
      responses:
        '200':
          description: Пользователь успешно авторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/token'
        '400':
          description: Неверные данные для входа

    get:
      tags:
        - users
      summary: Проверка состояния пользователя
      description: Возвращает информацию по авторизованному пользователю
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Пользователь авторизован
        '401':
          description: Пользователь не авторизован

  /users/favorites:
    post:
      summary: Добавление предложения в избранное
      description: Ресурс для добавления предложения в список избранных предложений пользователя.
      tags:
        - users
      parameters:
        - name: offerId
          in: query
          description: ID предложения, которое нужно добавить в избранное
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Предложение успешно добавлено в избранное
        '401':
          description: Пользователь не авторизован
        '404':
          description: Предложение не найдено

    delete:
      summary: Удаление предложения из избранного
      description: Ресурс для удаления предложения из списка избранных предложений пользователя.
      tags:
        - users
      parameters:
        - name: offerId
          in: query
          description: ID предложения, которое нужно удалить из избранного
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Предложение успешно удалено из избранного
        '401':
          description: Пользователь не авторизован
        '404':
          description: Предложение не найдено

    get:
      summary: Получение списка избранных предложений пользователя
      description: Ресурс для получения списка избранных предложений пользователя.
      tags:
        - users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Список предложений
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/shortOffer'
        '400':
          description: Некорректные данные для запроса
        '401':
          description: Пользователь не авторизован
        '404':
          description: Пользователь не найден

  /offers:
    post:
      summary: Создание нового предложения
      description: Создание нового предложения по аренде
      tags:
        - offers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createOffer'
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Предложение успешно создано
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'
        '400':
          description: Неверные данные для создания предложения
        '401':
          description: Пользователь не авторизован
    get:
      summary: Получение списка предложений по аренде
      description: Получение списка всех предложений по аренде
      tags:
        - offers
      parameters:
      - name: limit
        in: query
        description: Количество предложений (по умолчанию 60)
        required: false
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 60
      - name: city
        in: query
        description: Город, для которого нужно получить предложения (обязательно при запросе премиальных предложений)
        required: false
        schema:
          enum: [Paris, Cologne, Dusseldorf, Amsterdam, Hamburg, Brussels]
      - name: is_premium
        in: query
        description: Фильтр для получения только премиальных предложений (true для премиальных, обязательно указать город)
        required: false
        schema:
          type: boolean
      responses:
        '200':
          description: Список предложений
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/shortOffer'
        '400':
          description: Неверные данные для запроса

  /offers/{offerId}:
    get:
      summary: Получение детальной информации о предложении
      description: Получение полной информации по конкретному предложению
      tags:
        - offers
      parameters:
        - name: offerId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Информация о предложении
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'
        '404':
          description: Предложение не найдено
    patch:
      summary: Редактирование предложения
      description: Изменение данных существующего предложения
      tags:
        - offers
      parameters:
        - name: offerId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateOffer'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Предложение успешно обновлено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'
        '400':
          description: Неверные данные для обновления предложения
        '401':
          description: Пользователь не авторизован
        '403':
          description: Пользователь не имеет прав для редактирования
        '404':
          description: Предложение не найдено
    delete:
      summary: Удаление предложения
      description: Удаление существующего предложения
      tags:
        - offers
      parameters:
        - name: offerId
          in: path
          required: true
          schema:
            type: integer
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Предложение успешно удалено
        '401':
          description: Пользователь не авторизован
        '403':
          description: Пользователь не имеет прав для удаления
        '404':
          description: Предложение не найдено
  /offers/{offerId}/comments:
    get:
      summary: Получение списка комментариев для предложения
      description: Получение всех комментариев, связанных с предложением
      tags:
        - comments
      parameters:
        - name: offerId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Список комментариев
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/comment'
        '404':
          description: Комментарии не найдены
    
  /comments:
    post:
      summary: Добавление комментария для предложения
      description: Добавление нового комментария к предложению
      tags:
        - comments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/comment'
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Комментарий успешно добавлен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/comment'
        '401':
          description: Пользователь не авторизован
        '400':
          description: Неверные данные для добавления комментария

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    login:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
      required:
        - email
        - password
    token:
      type: object
      properties:
        token:
          type: string
          description: "JWT токен для авторизации пользователя"

    user:
      type: object
      properties:
        name:
          type: string
          description: Имя пользователя
          minLength: 1
          maxLength: 15
        email:
          type: string
          description: Электронная почта пользователя
          format: email
        avatar:
          type: string
          description: Аватар пользователя в формате .jpg или .png
        type:
          type: string
          description: Тип пользователя
          enum: [обычный, pro]

    createUser:
      type: object
      properties:
        name:
          type: string
          description: Имя пользователя
          minLength: 1
          maxLength: 15
        email:
          type: string
          description: Электронная почта пользователя
          format: email
        avatar:
          type: string
          description: Аватар пользователя в формате .jpg или .png
        password:
          type: string
          description: Пароль пользователя
          minLength: 6
          maxLength: 12
        type:
          type: string
          description: Тип пользователя
          enum: [обычный, pro]
      required:
        - name
        - email
        - password
        - type

    updateOffer:
      type: object
      properties:
        title:
          type: string
          description: Наименование предложения
          minLength: 10
          maxLength: 100
        description:
          type: string
          description: Описание предложения
          minLength: 20
          maxLength: 1024
        postDate:
          type: string
          format: date
          description: Дата публикации предложения
        city:
          type: string
          description: Город, в котором находится предложение
          enum: [Paris, Cologne, Dusseldorf, Amsterdam, Hamburg, Brussels]
        imagePreview:
          type: string
          description: Превью изображения
        images:
          type: array
          items:
            type: string
          description: Список фотографий жилья (6 фотографий)
        rentType:
          type: string
          description: Тип жилья
          enum: [apartment, house, room, hotel]
        roomsCount:
          type: integer
          description: Количество комнат
          minimum: 1
          maximum: 8
        guestsCount:
          type: integer
          description: Количество гостей
          minimum: 1
          maximum: 10
        price:
          type: integer
          description: Стоимость аренды
          minimum: 100
          maximum: 100000
        amenities:
          type: array
          items:
            type: string
            enum: [Breakfast, Air conditioning, Laptop friendly workspace, Baby seat, Washer, Towels, Fridge]
          description: Удобства, доступные в жилье
        coordinates:
          type: object
          properties:
            latitude:
              type: number
            longitude:
              type: number
          description: Координаты предложения
      required:
        - title
        - description
        - postDate
        - city
        - imagePreview
        - images
        - rentType
        - roomsCount
        - guestsCount
        - price
        - amenities
        - author
        - coordinates

    createOffer:
      type: object
      properties:
        title:
          type: string
          description: Наименование предложения
          minLength: 10
          maxLength: 100
        description:
          type: string
          description: Описание предложения
          minLength: 20
          maxLength: 1024
        postDate:
          type: string
          format: date
          description: Дата публикации предложения
        city:
          type: string
          description: Город, в котором находится предложение
          enum: [Paris, Cologne, Dusseldorf, Amsterdam, Hamburg, Brussels]
        imagePreview:
          type: string
          description: Превью изображения
        images:
          type: array
          items:
            type: string
          description: Список фотографий жилья (6 фотографий)
        rentType:
          type: string
          description: Тип жилья
          enum: [apartment, house, room, hotel]
        roomsCount:
          type: integer
          description: Количество комнат
          minimum: 1
          maximum: 8
        guestsCount:
          type: integer
          description: Количество гостей
          minimum: 1
          maximum: 10
        price:
          type: integer
          description: Стоимость аренды
          minimum: 100
          maximum: 100000
        amenities:
          type: array
          items:
            type: string
            enum: [Breakfast, Air conditioning, Laptop friendly workspace, Baby seat, Washer, Towels, Fridge]
          description: Удобства, доступные в жилье
        author:
          $ref: '#/components/schemas/user'
        coordinates:
          type: object
          properties:
            latitude:
              type: number
            longitude:
              type: number
          description: Координаты предложения
      required:
        - title
        - description
        - postDate
        - city
        - imagePreview
        - images
        - rentType
        - roomsCount
        - guestsCount
        - price
        - amenities
        - author
        - coordinates
    
    shortOffer:
      type: object
      properties:
        title:
          type: string
          description: Наименование предложения
          minLength: 10
          maxLength: 100
        price:
          type: integer
          description: Стоимость аренды
          minimum: 100
          maximum: 100000
        rentType:
          type: string
          description: Тип жилья
          enum: [apartment, house, room, hotel]
        isPremium:
          type: boolean
          description: Премиальность предложения
        isFavorite:
          type: boolean
          description: Предложение находится в избранном у пользователя
        postDate:
          type: string
          format: date
          description: Дата публикации предложения
        city:
          type: string
          description: Город, в котором находится предложение
          enum: [Paris, Cologne, Dusseldorf, Amsterdam, Hamburg, Brussels]
        imagePreview:
          type: string
          description: Превью изображения
        rating:
          type: number
          description: Рейтинг предложения
          minimum: 1
          maximum: 5
          example: 4.5
        commentsCount:
          type: number
          
    offer:
      type: object
      properties:
        title:
          type: string
          description: Наименование предложения
          minLength: 10
          maxLength: 100
        description:
          type: string
          description: Описание предложения
          minLength: 20
          maxLength: 1024
        postDate:
          type: string
          format: date
          description: Дата публикации предложения
        city:
          type: string
          description: Город, в котором находится предложение
          enum: [Paris, Cologne, Dusseldorf, Amsterdam, Hamburg, Brussels]
        imagePreview:
          type: string
          description: Превью изображения
        images:
          type: array
          items:
            type: string
          description: Список фотографий жилья (6 фотографий)
        rating:
          type: number
          description: Рейтинг предложения
          minimum: 1
          maximum: 5
          example: 4.5
        isPremium:
          type: boolean
          description: Премиальность предложения
        isFavorite:
          type: boolean
          description: Предложение находится в избранном у пользователя
        rentType:
          type: string
          description: Тип жилья
          enum: [apartment, house, room, hotel]
        roomsCount:
          type: integer
          description: Количество комнат
          minimum: 1
          maximum: 8
        guestsCount:
          type: integer
          description: Количество гостей
          minimum: 1
          maximum: 10
        price:
          type: integer
          description: Стоимость аренды
          minimum: 100
          maximum: 100000
        amenities:
          type: array
          items:
            type: string
            enum: [Breakfast, Air conditioning, Laptop friendly workspace, Baby seat, Washer, Towels, Fridge]
          description: Удобства, доступные в жилье
        author:
          $ref: '#/components/schemas/user'
        coordinates:
          type: object
          properties:
            latitude:
              type: number
            longitude:
              type: number
          description: Координаты предложения
        commentsCount:
          type: number

    comment:
      type: object
      properties:
        text:
          type: string
          description: Текст комментария
          minLength: 5
          maxLength: 1024
        rating:
          type: number
          description: Рейтинг комментария
          minimum: 1
          maximum: 5
        userId:
          $ref: '#/components/schemas/user'
        offerId:
          $ref: '#/components/schemas/offer'
